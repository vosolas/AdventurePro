import { ethers } from "hardhat";

async function main() {
  const contractAddress = "0xa70DFA470B27d1Db1612E64c8Fb8c094FB3202E7"; // ƒê·ªãa ch·ªâ contract ƒë√£ deploy
  const poolIndex = 0; // Pool ETH
  const amount = ethers.parseEther("0.1"); // 0.1 ETH

  // L·∫•y instance contract
  const LuckySpinFHE_Complete = await ethers.getContractFactory("LuckySpinFHE_Complete");
  const luckySpinFHE = LuckySpinFHE_Complete.attach(contractAddress);

  // L·∫•y signer admin
  const [admin] = await ethers.getSigners();
  console.log(`üë§ Admin: ${admin.address}`);

  // S·ªë d∆∞ tr∆∞·ªõc khi r√∫t
  const before = await ethers.provider.getBalance(admin.address);
  console.log(`üí∞ S·ªë d∆∞ tr∆∞·ªõc khi r√∫t: ${ethers.formatEther(before)} ETH`);

  // Th·ª±c hi·ªán r√∫t
  const tx = await luckySpinFHE.withdrawFromPool(poolIndex, amount);
  await tx.wait();
  console.log(`‚úÖ ƒê√£ r√∫t ${ethers.formatEther(amount)} ETH t·ª´ pool v·ªÅ v√≠ admin.`);

  // S·ªë d∆∞ sau khi r√∫t
  const after = await ethers.provider.getBalance(admin.address);
  console.log(`üí∞ S·ªë d∆∞ sau khi r√∫t: ${ethers.formatEther(after)} ETH`);
}

main()
  .then(() => {
    console.log("\n‚úÖ R√∫t ETH th√†nh c√¥ng!");
    process.exit(0);
  })
  .catch((error) => {
    console.error("‚ùå L·ªói khi r√∫t ETH:", error);
    process.exit(1);
  });
